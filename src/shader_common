#version 330


vec3 lightPos = vec3(4.0, 4.0, 4.0);

vec3 doSpecularLight(vec3 normal, vec3 pos, mat4 view) {

    vec3 viewSpaceNormal = normalize(view *vec4(normal,0.0)).xyz;
    vec3 viewSpacePos = ( view * vec4(pos,1)).xyz;
    vec3 viewSpaceEyeDirection = normalize(-viewSpacePos);
    vec3 viewSpaceLightPos = ( view * vec4(lightPos,1)).xyz;
    vec3 viewSpaceLightDirection = normalize(viewSpaceLightPos + viewSpaceEyeDirection);

    float lightPower = 15.0f;
    float distance = length( lightPos - pos );

    vec3 n = viewSpaceNormal;
    vec3 l = viewSpaceLightDirection;
    vec3 v = viewSpaceEyeDirection;
    vec3 r = reflect(-l,n);
    float spec = clamp( dot( v,r ), 0,1 );

    return vec3(lightPower * pow(spec,5) / (distance*distance));

}
